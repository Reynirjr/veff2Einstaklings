<%- include('partials/header') %>

<main>
  <h1><%= group.name %></h1>
  
  <% if (successMessage) { %>
    <div class="alert success">
      <%= successMessage %>
    </div>
  <% } %>
  
  <% if (errorMessage) { %>
    <div class="alert error">
      <%= errorMessage %>
    </div>
  <% } %>
  
  <div class="group-details">
    <div class="group-info">
      <p><strong>Description:</strong> <%= group.description %></p>
      <p><strong>Created by:</strong> <%= group.creator ? group.creator.username : 'Unknown' %></p>
      <p><strong>Theme:</strong> <%= group.theme || 'No theme set' %></p>
      <p><strong>Voting Method:</strong> 
        <% if (group.votingMethod === 'single_vote') { %>
          Single Vote
        <% } else if (group.votingMethod === 'top_3') { %>
          Top 3 Weighted
        <% } else if (group.votingMethod === 'rating') { %>
          Rating (1-5)
        <% } %>
      </p>
    </div>
    
    <% if (currentRound) { %>
      <div class="current-round">
        <h2>Current Round: #<%= currentRound.roundNumber %></h2>
        
        <div class="round-status <%= phase %>">
          <% if (phase === 'pending') { %>
            <div class="status-icon">‚è∞</div>
            <div class="status-text">Song submission starts soon</div>
          <% } else if (phase === 'input') { %>
            <div class="status-icon">üéµ</div>
            <div class="status-text">Song submission is open!</div>
          <% } else if (phase === 'voting') { %>
            <div class="status-icon">üó≥Ô∏è</div>
            <div class="status-text">Voting is open!</div>
          <% } else { %>
            <div class="status-icon">üèÜ</div>
            <div class="status-text">This round has ended</div>
          <% } %>
        </div>
        
        <div class="round-schedule">
          <div class="schedule-row">
            <div class="schedule-label">Song Submission:</div>
            <div class="schedule-value">
              <%= formatDateWithMilitaryTime(currentRound.inputOpen) %> - <%= formatDateWithMilitaryTime(currentRound.inputClose) %>
            </div>
          </div>
          <div class="schedule-row">
            <div class="schedule-label">Voting:</div>
            <div class="schedule-value">
              <%= formatDateWithMilitaryTime(currentRound.votingOpen) %> - <%= formatDateWithMilitaryTime(currentRound.votingClose) %>
            </div>
          </div>
        </div>
        
        <div id="countdown" class="countdown-container">
          <% if (phase === 'pending') { %>
            <h3>Submission starts in:</h3>
          <% } else if (phase === 'input') { %>
            <h3>Submission ends in:</h3>
          <% } else if (phase === 'voting') { %>
            <h3>Voting ends in:</h3>
          <% } else { %>
            <h3>Round completed</h3>
          <% } %>
          
          <% if (phase !== 'finished') { %>
            <div id="countdown-timer" class="countdown-timer"></div>
          <% } %>
        </div>

        <% if (phase === 'voting' && isMember) { %>
          <div class="voting-button-container">
            <a href="/groups/<%= group.id %>/voting" class="voting-button">
              Go to Voting Page
            </a>
          </div>
        <% } %>
        
        <% if (phase === 'input' && isMember) { %>
          <div class="submission-section">
            <% if (userSubmittedSong) { %>
              <div class="already-submitted">
                <h3>Your Submitted Song</h3>
                <p><strong><%= userSubmittedSong.title %></strong> by <%= userSubmittedSong.artist %></p>
                <p>YouTube: <a href="<%= userSubmittedSong.youtubeUrl %>" target="_blank">Watch on YouTube</a></p>
              </div>
            <% } else { %>
              <div class="song-form">
                <h3>Submit Your Song</h3>
                <form action="/rounds/<%= currentRound.id %>/songs" method="POST">
                  <div>
                    <label for="title">Song Title:</label>
                    <input type="text" name="title" id="title" required>
                  </div>
                  
                  <div>
                    <label for="artist">Artist:</label>
                    <input type="text" name="artist" id="artist" required>
                  </div>
                  
                  <div>
                    <label for="youtubeUrl">YouTube URL:</label>
                    <input type="text" name="youtubeUrl" id="youtubeUrl" placeholder="https://www.youtube.com/watch?v=..." required>
                    <p class="help-text">Please enter the full URL to the YouTube video</p>
                  </div>
                  
                  <button type="submit" class="button">Submit Song</button>
                </form>
              </div>
            <% } %>
          </div>
        <% } %>
        
        <% if (phase === 'voting' || phase === 'finished') { %>
          <div class="songs-section">
            <h3><%= phase === 'voting' ? 'Voting in Progress' : 'Final Results' %></h3>
            
            <% if (songsWithVotes && songsWithVotes.length > 0) { %>
              <% if (phase === 'finished') { %>
                <!-- Only show results after voting is finished -->
                <div class="results-container">
                  <% if (group.votingMethod === 'single_vote') { %>
                    <!-- Single vote display -->
                    <% songsWithVotes.forEach((song, index) => { %>
                      <div class="song-result">
                        <span class="rank"><%= index + 1 %></span>
                        <span class="song-title"><%= song.title %></span>
                        <span class="song-artist">by <%= song.artist %></span>
                        <span class="vote-count"><%= song.voteCount %> votes</span>
                      </div>
                    <% }); %>
                  <% } else if (group.votingMethod === 'rating') { %>
                    <!-- Rating display with averages -->
                    <% songsWithVotes.forEach((song, index) => { %>
                      <div class="song-result">
                        <span class="rank"><%= index + 1 %></span>
                        <span class="song-title"><%= song.title %></span>
                        <span class="song-artist">by <%= song.artist %></span>
                        <span class="rating-average"><%= parseFloat(song.averageRating).toFixed(1) %> / 10</span>
                        <span class="rating-count">(<%= song.voteCount %> ratings)</span>
                      </div>
                    <% }); %>
                  <% } %>
                </div>
              <% } else { %>
                <!-- During voting, just show a message -->
                <p>Voting is in progress. Results will be available once voting has ended.</p>
              <% } %>
            <% } else { %>
              <p>No songs have been submitted yet.</p>
            <% } %>
          </div>
        <% } %>
      </div>
    <% } else { %>
      <div class="no-rounds">
        <p>No active rounds at the moment.</p>
        
        <% if (group.created_by === userId || isAdmin) { %>
          <form action="/groups/<%= group.id %>/rounds" method="POST" class="start-round-form">
            <h3>Start First Round</h3>
            <div>
              <label for="inputStartDate">Input Start Date:</label>
              <input type="date" id="inputStartDate" name="inputStartDate" required>
            </div>
            <button type="submit" class="button">Start Round</button>
          </form>
        <% } %>
      </div>
    <% } %>
    
    <% if ((group.created_by === userId || isAdmin) && currentRound && currentRound.status === 'finished') { %>
      <div class="create-round">
        <h3>Start New Round</h3>
        <form action="/groups/<%= group.id %>/rounds" method="POST">
          <div>
            <label for="inputStartDate">Start Date:</label>
            <input type="date" id="inputStartDate" name="inputStartDate" required>
          </div>
          
          <div>
            <label for="roundTheme">Theme (optional):</label>
            <input type="text" id="roundTheme" name="theme">
          </div>
          
          <button type="submit" class="button">Create New Round</button>
        </form>
      </div>
    <% } %>
    
    <% if (rounds.length > 1) { %>
      <div class="past-rounds">
        <h2>Past Rounds</h2>
        <div class="rounds-list">
          <% rounds.slice(1).forEach(round => { %>
            <div class="round-card">
              <h3>Round #<%= round.roundNumber %></h3>
              <p><strong>Theme:</strong> <%= round.theme || 'No specific theme' %></p>
              <p><strong>Status:</strong> <%= round.status %></p>
              <a href="/rounds/<%= round.id %>" class="button small">View Details</a>
            </div>
          <% }); %>
        </div>
      </div>
    <% } %>
    
    <h2>Members (<%= group.members.length %>)</h2>
    <ul class="members-list">
      <% group.members.forEach(member => { %>
        <li><%= member.username %> <%= member.GroupUser.role === 'admin' ? '(Admin)' : '' %></li>
      <% }); %>
    </ul>
  </div>
  
  <div class="actions">
    <% if (!isMember) { %>
      <% if (group.passwordHash) { %>
        <form action="/groups/<%= group.id %>/join" method="POST">
          <div>
            <label for="enteredPassword">Lykilor√∞ h√≥ps:</label>
            <input type="password" name="enteredPassword" required>
          </div>
          <button type="submit" class="button">Gerast me√∞limur h√≥ps</button>
        </form>
      <% } else { %>
        <form action="/groups/<%= group.id %>/join" method="POST">
          <button type="submit" class="button">Gerast me√∞limur h√≥ps</button>
        </form>
      <% } %>
    <% } else { %>
      <p>√ûu ert Me√∞limur.</p>
      
      <% if (group.created_by === userId) { %>
        <form id="deleteForm" action="/groups/<%= group.id %>/delete" method="POST">
          <input type="hidden" name="_method" value="DELETE">
          <button type="button" id="deleteButton" class="button danger">Ey√∞a h√≥p</button>
        </form>
      <% } %>
    <% } %>
    
    <a href="/groups" class="button">Back to Groups</a>
  </div>
</main>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const deleteButton = document.getElementById('deleteButton');
    if (deleteButton) {
      deleteButton.addEventListener('click', function() {
        if (confirm('Ertu viss um a√∞ √æ√∫ viljir ey√∞a √æessum h√≥p?')) {
          document.getElementById('deleteForm').submit();
        }
      });
    }

    setTimeout(function() {
      const alerts = document.querySelectorAll('.alert');
      alerts.forEach(alert => {
        alert.style.opacity = '0';
        setTimeout(() => alert.style.display = 'none', 500);
      });
    }, 5000);

    const dateInputs = document.querySelectorAll('input[type="date"]');
    dateInputs.forEach(input => {
      if (!input.value) {
        const tomorrow = new Date();
        tomorrow.setDate(tomorrow.getDate() + 1);
        input.valueAsDate = tomorrow;
      }
    });

     if (currentRound) { 
    const countdownTimer = document.getElementById('countdown-timer');
    if (countdownTimer) {
      let targetTime;
      let countdownEndMessage;

      if ('<%= phase %>' === 'pending') {
        targetTime = new Date('<%= currentRound ? currentRound.inputOpen : "" %>').getTime();
        countdownEndMessage = 'Song submission is now open!';
      } else if ('<%= phase %>' === 'input') {
        targetTime = new Date('<%= currentRound ? currentRound.inputClose : "" %>').getTime();
        countdownEndMessage = 'Song submission is now closed!';
      } else if ('<%= phase %>' === 'voting') {
        targetTime = new Date('<%= currentRound ? currentRound.votingClose : "" %>').getTime();
        countdownEndMessage = 'Voting is now closed!';
      } else {
        targetTime = Date.now();
        countdownEndMessage = 'Round completed';
      }

      function updateCountdown() {
        const now = Date.now();
        if (now >= targetTime) {
          countdownTimer.innerHTML = countdownEndMessage;
          clearInterval(intervalId);
          return;
        }

        const diff = targetTime - now;
        const days = Math.floor(diff / (1000 * 60 * 60 * 24));
        const hours = Math.floor((diff / (1000 * 60 * 60)) % 24);
        const minutes = Math.floor((diff / (1000 * 60)) % 60);
        const seconds = Math.floor((diff / 1000) % 60);

        let display = '';
        if (days) display += `<span class="time-unit"><span class="time-value">${days}</span><span class="time-label">days</span></span>`;
        if (hours) display += `<span class="time-unit"><span class="time-value">${hours}</span><span class="time-label">hours</span></span>`;
        if (minutes) display += `<span class="time-unit"><span class="time-value">${minutes}</span><span class="time-label">min</span></span>`;
        display += `<span class="time-unit"><span class="time-value">${seconds}</span><span class="time-label">sec</span></span>`;

        countdownTimer.innerHTML = display;
      }

      updateCountdown();
      const intervalId = setInterval(updateCountdown, 1000);
    }
     } 
  });
</script>

<style>
  /* Alert styles */
  .alert {
    padding: 15px;
    margin-bottom: 20px;
    border-radius: 4px;
    transition: opacity 0.5s;
  }
  
  .alert.success {
    background-color: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
  }
  
  .alert.error {
    background-color: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
  }
  
  /* Group info styles */
  .group-info {
    background-color: #f8f9fa;
    padding: 20px;
    border-radius: 8px;
    margin-bottom: 20px;
  }
  
  /* Current round styles */
  .current-round {
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 20px;
    margin-bottom: 30px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }
  
  .round-status {
    display: flex;
    align-items: center;
    padding: 15px;
    border-radius: 8px;
    margin-bottom: 20px;
  }
  
  .round-status.pending {
    background-color: #e2e3e5;
  }
  
  .round-status.input {
    background-color: #d1ecf1;
    color: #0c5460;
  }
  
  .round-status.voting {
    background-color: #d4edda;
    color: #155724;
  }
  
  .round-status.finished {
    background-color: #f8f9fa;
    color: #383d41;
  }
  
  .status-icon {
    font-size: 2rem;
    margin-right: 15px;
  }
  
  .status-text {
    font-size: 1.2rem;
    font-weight: bold;
  }
  
  .round-schedule {
    background-color: #f8f9fa;
    padding: 15px;
    border-radius: 8px;
    margin-bottom: 20px;
  }
  
  .schedule-row {
    display: flex;
    margin-bottom: 8px;
  }
  
  .schedule-label {
    font-weight: bold;
    min-width: 150px;
  }
  
  /* Already submitted styles */
  .already-submitted {
    background-color: #d4edda;
    padding: 15px;
    border-radius: 8px;
    margin-bottom: 20px;
  }
  
  /* Basic reuse of existing styles */
  .button.danger {
    background-color: #d32f2f;
    margin-bottom: 10px;
  }
  
  .button.danger:hover {
    background-color: #b71c1c;
  }
  
  .songs-list {
    margin-bottom: 20px;
    list-style-type: none;
    padding: 0;
  }
  
  .song-item {
    margin-bottom: 8px;
    padding: 10px 15px;
    border-radius: 4px;
    background-color: #f5f5f5;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .vote-count {
    font-weight: bold;
    margin-right: 10px;
  }
  
  .vote-button {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: #888;
    transition: color 0.2s;
  }
  
  .vote-button:hover {
    color: #f5a623;
  }
  
  .vote-button.voted {
    color: #f5a623;
  }
  
  .vote-form {
    display: inline;
  }
  
  .submitted-by {
    font-size: 0.8em;
    color: #777;
    margin-left: 8px;
  }
  
  .song-form {
    padding: 15px;
    background-color: #f5f5f5;
    border-radius: 8px;
    margin-bottom: 20px;
  }
  
  .song-form div {
    margin-bottom: 10px;
  }
  
  .song-form label {
    display: block;
    margin-bottom: 5px;
  }
  
  .song-form input {
    width: 100%;
    padding: 8px;
    border-radius: 4px;
    border: 1px solid #ddd;
  }
  
  .help-text {
    font-size: 0.8em;
    color: #666;
    margin-top: 2px;
  }
  
  .countdown-container {
    background-color: #f8f9fa;
    border-radius: 8px;
    padding: 15px;
    margin: 20px 0;
    text-align: center;
  }
  
  .countdown-timer {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-top: 10px;
    font-size: 1.2em;
  }
  
  .time-unit {
    display: flex;
    flex-direction: column;
    align-items: center;
    min-width: 60px;
  }
  
  .time-value {
    font-size: 1.5em;
    font-weight: bold;
    color: #1976d2;
  }
  
  .time-label {
    font-size: 0.7em;
    color: #666;
    text-transform: uppercase;
  }
  
  .top3-form, .rating-form {
    background-color: #f8f9fa;
    border-radius: 8px;
    padding: 15px;
    margin: 20px 0;
  }
  
  .top3-selections {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin: 15px 0;
  }
  
  .top3-selection select, .rating-controls {
    margin-top: 5px;
    width: 100%;
    padding: 8px;
  }
  
  .rating-list {
    list-style: none;
    padding: 0;
  }
  
  .rating-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px;
    border-bottom: 1px solid #eee;
  }
  
  .rating-controls {
    display: flex;
    gap: 10px;
  }
  
  .rating-controls input {
    display: none;
  }
  
  .rating-controls label {
    display: inline-block;
    width: 30px;
    height: 30px;
    line-height: 30px;
    text-align: center;
    border-radius: 50%;
    background-color: #e0e0e0;
    cursor: pointer;
  }
  
  .rating-controls input:checked + label {
    background-color: #1976d2;
    color: white;
  }
  
  .rating-disabled {
    color: #999;
    font-style: italic;
  }
  
  .rank {
    display: inline-block;
    width: 24px;
    height: 24px;
    line-height: 24px;
    text-align: center;
    border-radius: 50%;
    background-color: #1976d2;
    color: white;
    margin-right: 10px;
  }
  
  .rounds-list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 15px;
    margin-top: 15px;
  }
  
  .round-card {
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 15px;
    background-color: #f8f9fa;
  }
  
  .highlight {
    color: #1976d2;
    font-weight: bold;
  }
  
  .button.small {
    padding: 5px 10px;
    font-size: 0.9em;
  }
  
  .create-round {
    background-color: #f5f5f5;
    padding: 15px;
    border-radius: 8px;
    margin: 20px 0;
  }
  
  .members-list {
    columns: 2;
    column-gap: 20px;
  }
  
  .voting-button-container {
    margin: 20px 0;
    text-align: center;
  }

  .voting-button {
    display: inline-block;
    background-color: #1976d2;
    color: white;
    font-size: 1.1em;
    padding: 12px 24px;
    text-decoration: none;
    border-radius: 4px;
    transition: background-color 0.2s;
  }

  .voting-button:hover {
    background-color: #1565c0;
  }
  
  .results-container {
    margin-top: 15px;
  }

  .song-result {
    display: flex;
    align-items: center;
    padding: 12px;
    margin-bottom: 8px;
    background-color: #f8f9fa;
    border-radius: 6px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
  }

  .rank {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 30px;
    height: 30px;
    background-color: #1976d2;
    color: white;
    border-radius: 50%;
    margin-right: 15px;
    font-weight: bold;
  }

  .song-title {
    font-weight: bold;
    margin-right: 10px;
  }

  .song-artist {
    color: #666;
    margin-right: auto;
  }

  .vote-count, .rating-average {
    font-weight: bold;
    color: #1976d2;
    margin-left: 10px;
  }

  .rating-count {
    color: #666;
    font-size: 0.9em;
    margin-left: 5px;
  }
  
  @media (max-width: 768px) {
    .members-list {
      columns: 1;
    }
  }
</style>

<%- include('partials/footer') %>
